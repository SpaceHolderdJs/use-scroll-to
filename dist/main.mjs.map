{"version":3,"sources":["../src/hooks/useScrollTop.ts","../src/contexts/ScrollTop.context.tsx","../src/components/Link.tsx","../src/components/ScrollPoint.tsx"],"sourcesContent":["import { useCallback, useContext } from \"react\";\r\nimport { ScrollTopContext } from \"../contexts/ScrollTop.context\";\r\n\r\ndeclare type ScrollOptions = ScrollIntoViewOptions & {\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n};\r\n\r\nexport const useScrollTop = (\r\n    tag: string,\r\n    options: ScrollOptions = { behavior: \"smooth\", offsetX: 0, offsetY: 0 }\r\n) => {\r\n    const { current, elementsRefs } = useContext(ScrollTopContext)!;\r\n\r\n    const scroll = useCallback(() => {\r\n        const { offsetX, offsetY, ...defaultOptions } = options;\r\n\r\n        if (elementsRefs) {\r\n            const element = elementsRefs[tag as keyof typeof elementsRefs];\r\n\r\n            (offsetX || offsetY) &&\r\n                window.scrollTo({\r\n                    left: offsetX,\r\n                    top: offsetY,\r\n                    behavior: defaultOptions.behavior,\r\n                });\r\n\r\n            element?.current?.scrollIntoView(defaultOptions);\r\n        }\r\n    }, [tag, elementsRefs, options]);\r\n\r\n    return { scroll, current };\r\n};\r\n","import {\r\n  PropsWithChildren,\r\n  createContext,\r\n  FC,\r\n  useState,\r\n  Dispatch,\r\n  RefObject,\r\n} from \"react\";\r\n\r\nexport type ElementsType = {\r\n  [k: string]: RefObject<HTMLElement | null> | null;\r\n};\r\n\r\nexport interface ScrollTopContextItemsInterface {\r\n  current: RefObject<HTMLElement | null> | null;\r\n  setCurrent: Dispatch<RefObject<HTMLElement | null> | null>;\r\n  elementsRefs: ElementsType | null;\r\n  setElementsRefs: Dispatch<ElementsType | null>;\r\n}\r\n\r\nexport const ScrollTopContext =\r\n  createContext<ScrollTopContextItemsInterface | null>(null);\r\n\r\nexport const ScrollTopContextProvider: FC<\r\n  PropsWithChildren\r\n> = ({ children }) => {\r\n  const [elementsRefs, setElementsRefs] = useState<ElementsType | null>(null);\r\n  const [current, setCurrent] = useState<RefObject<HTMLElement | null> | null>(\r\n    null\r\n  );\r\n\r\n  return (\r\n    <ScrollTopContext.Provider\r\n      value={{\r\n        elementsRefs,\r\n        setElementsRefs,\r\n        current,\r\n        setCurrent,\r\n      }}\r\n    >\r\n      {children}\r\n    </ScrollTopContext.Provider>\r\n  );\r\n};\r\n","import {\r\n  PropsWithChildren,\r\n  FC,\r\n  DetailedHTMLProps,\r\n  HTMLAttributes,\r\n} from \"react\";\r\nimport { useScrollTop } from \"../hooks\";\r\n\r\nexport const Link: FC<\r\n  PropsWithChildren &\r\n    DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement> & {\r\n      elementTag: string;\r\n      isHasRouted?: boolean;\r\n    }\r\n> = ({ children, elementTag, isHasRouted = false }) => {\r\n  const { scroll } = useScrollTop(elementTag);\r\n  return isHasRouted ? (\r\n    <a href={`#${elementTag}`}>{}</a>\r\n  ) : (\r\n    <span onClick={scroll}>{children}</span>\r\n  );\r\n};\r\n","import {\r\n  PropsWithChildren,\r\n  FC,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  DetailedHTMLProps,\r\n  HTMLAttributes,\r\n} from \"react\";\r\nimport { ElementsType, ScrollTopContext } from \"../contexts/ScrollTop.context\";\r\n\r\nexport const ScrollPoint: FC<\r\n  PropsWithChildren &\r\n    DetailedHTMLProps<HTMLAttributes<HTMLElement>, HTMLElement> & {\r\n      tag: string;\r\n    }\r\n> = ({ children, tag, ...rest }) => {\r\n  const { setElementsRefs } = useContext(ScrollTopContext)!;\r\n  const ref = useRef<HTMLElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    setElementsRefs((prev: ElementsType) => ({ ...prev, [tag]: ref }));\r\n  }, [setElementsRefs, ref, tag]);\r\n\r\n  return (\r\n    <section id={tag} ref={ref} {...rest}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n"],"mappings":";AAAA,SAAS,aAAa,kBAAkB;;;ACAxC;AAAA,EAEE;AAAA,EAEA;AAAA,OAGK;AAyBH;AAZG,IAAM,mBACX,cAAqD,IAAI;AAEpD,IAAM,2BAET,CAAC,EAAE,SAAS,MAAM;AACpB,QAAM,CAAC,cAAc,eAAe,IAAI,SAA8B,IAAI;AAC1E,QAAM,CAAC,SAAS,UAAU,IAAI;AAAA,IAC5B;AAAA,EACF;AAEA,SACE;AAAA,IAAC,iBAAiB;AAAA,IAAjB;AAAA,MACC,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;;;ADnCO,IAAM,eAAe,CACxB,KACA,UAAyB,EAAE,UAAU,UAAU,SAAS,GAAG,SAAS,EAAE,MACrE;AACD,QAAM,EAAE,SAAS,aAAa,IAAI,WAAW,gBAAgB;AAE7D,QAAM,SAAS,YAAY,MAAM;AAC7B,UAAM,EAAE,SAAS,SAAS,GAAG,eAAe,IAAI;AAEhD,QAAI,cAAc;AACd,YAAM,UAAU,aAAa,GAAgC;AAE7D,OAAC,WAAW,YACR,OAAO,SAAS;AAAA,QACZ,MAAM;AAAA,QACN,KAAK;AAAA,QACL,UAAU,eAAe;AAAA,MAC7B,CAAC;AAEL,eAAS,SAAS,eAAe,cAAc;AAAA,IACnD;AAAA,EACJ,GAAG,CAAC,KAAK,cAAc,OAAO,CAAC;AAE/B,SAAO,EAAE,QAAQ,QAAQ;AAC7B;;;AEfI,gBAAAA,YAAA;AATG,IAAM,OAMT,CAAC,EAAE,UAAU,YAAY,cAAc,MAAM,MAAM;AACrD,QAAM,EAAE,OAAO,IAAI,aAAa,UAAU;AAC1C,SAAO,cACL,gBAAAA,KAAC,OAAE,MAAM,IAAI,UAAU,IAAM,IAE7B,gBAAAA,KAAC,UAAK,SAAS,QAAS,UAAS;AAErC;;;ACrBA;AAAA,EAGE,cAAAC;AAAA,EACA;AAAA,EACA;AAAA,OAGK;AAkBH,gBAAAC,YAAA;AAfG,IAAM,cAKT,CAAC,EAAE,UAAU,KAAK,GAAG,KAAK,MAAM;AAClC,QAAM,EAAE,gBAAgB,IAAIC,YAAW,gBAAgB;AACvD,QAAM,MAAM,OAA2B,IAAI;AAE3C,YAAU,MAAM;AAEd,oBAAgB,CAAC,UAAwB,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE;AAAA,EACnE,GAAG,CAAC,iBAAiB,KAAK,GAAG,CAAC;AAE9B,SACE,gBAAAD,KAAC,aAAQ,IAAI,KAAK,KAAW,GAAG,MAC7B,UACH;AAEJ;","names":["jsx","useContext","jsx","useContext"]}